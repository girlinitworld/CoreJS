Typescript
1. Implement a class hierarchy using inheritance and demonstrate method overriding and calling super methods.

2. Create a TypeScript interface representing a database entity with properties such as ID, name, and description. Implement the interface in a class.

3. Implement a generic class for a stack data structure that supports operations like push, pop, and peek. Demonstrate type safety and usage of the stack class by implementing Generics.

4. Use decorators to implement logging functionality for a class, where all method invocations are logged with their arguments and return values.

5. Create a TypeScript module that exports multiple functions and classes. Import the module in another file and demonstrate usage of the exported entities.

6. Use the keyof keyword to create a function that accepts an object and a key, and returns the value corresponding to the key from the object.

7. Implement an async/await function that fetches data from an API and demonstrates error handling and handling of async operations.

8. Create a TypeScript type declaration file for an external library that lacks TypeScript support. Declare the necessary types and interfaces to enable type checking and autocompletion for the library.

9. Configure the tsconfig.json file to include custom compiler options such as enabling strict null checks, strict mode, and specifying custom typings directories.